#!/usr/bin/bash

# exit on error
set -e

rm -rf isrs_gen
mkdir -p isrs_gen
cd isrs_gen
# vars
ISRS_GEN_C="isrs_gen.c"
ISRS_GEN_ASM="isrs_gen.S"

ISRS_WITH_ERROR_CODE="8 10 11 12 13 14 17 21"


#
# Generate C file
#
echo "// !!! THIS FILE IS AUTOGENERATED !!!" > $ISRS_GEN_C
echo " 
#define IDT_FLAG_GATE_TASK 0x5
#define IDT_FLAG_GATE_16BIT_INT 0x6
#define IDT_FLAG_GATE_16BIT_TRAP 0x7
#define IDT_FLAG_GATE_32BIT_INT 0xE
#define IDT_FLAG_GATE_32BIT_TRAP 0xF

#define IDT_FLAG_RING0 (0 << 5)
#define IDT_FLAG_RING1 (1 << 5)
#define IDT_FLAG_RING2 (2 << 5)
#define IDT_FLAG_RING3 (3 << 5)

#define IDT_FLAG_PRESENT 0x80" >> $ISRS_GEN_C
echo "#include \"../../idt/idt.h\"" >> $ISRS_GEN_C
echo "" >> $ISRS_GEN_C

for i in $(seq 0 255); do
 echo "extern void ISR${i}();" >> $ISRS_GEN_C
done

echo "" >> $ISRS_GEN_C
echo "void isrs_gen_init()" >> $ISRS_GEN_C
echo "{" >> $ISRS_GEN_C

for i in $(seq 0 255); do
    echo "    idt_set_descriptor(${i}, ISR${i}, IDT_FLAG_RING0 | IDT_FLAG_GATE_32BIT_INT);" >> $ISRS_GEN_C
done


echo "}" >> $ISRS_GEN_C

#
# Generate assembly file
#
echo "/* !!! THIS FILE IS AUTOGENERATED !!! */" > $ISRS_GEN_ASM

for i in $(seq 0 255); do
    if echo "$ISRS_WITH_ERROR_CODE" | grep -q "\b${i}\b"; then
        echo "
.globl ISR${i}
.type ISR${i}, @function
ISR${i}:
    pushl \$${i}      # Push interrupt number
    jmp isr_common
        " >> $ISRS_GEN_ASM
    else
        echo "
.globl ISR${i}
.type ISR${i}, @function
ISR${i}:
    pushl \$0       # Push dummy error code
    pushl \$${i}      # Push interrupt number
    jmp isr_common
        " >> $ISRS_GEN_ASM
    fi
done

echo "
isr_common:
  pushal       # Pushes in order: eax, ecx, edx, ebx, esp, ebp, esi, edi

  xorl %eax, %eax  # Push ds
  movw %ds, %ax
  pushl %eax

  movw \$0x10, %ax   # Use the kernel data segment
  movw %ax, %ds
  movw %ax, %es
  movw %ax, %fs
  movw %ax, %gs

  pushl %esp      # Pass the pointer to the stack to C
  call ISR_Handler
  addl \$4, %esp

  popl %eax        # Restore the old segment
  movw %ax, %ds
  movw %ax, %es
  movw %ax, %fs
  movw %ax, %gs

  popal         # Pop what we pushed with pusha
  addl \$8, %esp     # Remove error code and interrupt number
  iret          # Will pop: cs, eip, eflags, ss, esp

" >> $ISRS_GEN_ASM